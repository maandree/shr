.TH SHR_READ_TRY 3 SHR-%VERSION%
.SH NAME
.B shr_read_try
\- Prologue for reading from a shared ring buffer.
.SH SYNOPSIS
.LP
.nf
#include <shr.h>
.P
__attribute__((nonnull))
int shr_read_try(shr_t *restrict \fIshr\fP, const char **restrict \fIbuffer\fP, size_t *restrict \fIlength\fP);
.fi
.P
Link with \fI\-lshr\fP.
.SH DESCRIPTION
The
.BR shr_read_try ()
function flags a shared ring buffer as being currently read,
but fail if it has not readable data.
.P
Upon successful completion, the function will store a buffer
in \fIbuffer\fP. This buffer contains the data sent to the
process from the writing end. The number of bytes that are
ready to be read will be stored in \fIlength\fP.
.P
When the data has been read from (*\fIbuffer\fP), call the
function
.BR shr_read_done (3).
.P
Undefined behaviour is invoked if multiple processes use this
function, even if not concurrently.
.SH RETURN VALUES
Upon successful completion, the function returns 0.
Otherwise the function returns \-1 and sets
\fIerrno\fP to indicate the error.
.SH ERRORS
This function may fail with the errors
.BR EACCES ,
.BR EAGAIN ,
.BR EIDRM ,
.BR EINTR
and
.BR EINVAL ,
as specified for the function
.BR semop (3).
.SH SEE ALSO
.BR shr_create (3),
.BR shr_remove (3),
.BR shr_remove_by_key (3),
.BR shr_open (3),
.BR shr_reverse_dup (3),
.BR shr_close (3),
.BR shr_chown (3),
.BR shr_chmod (3),
.BR shr_stat (3),
.BR shr_key_to_str (3),
.BR shr_str_to_key (3),
.BR shr_read (3),
.BR shr_read_try (3),
.BR shr_read_timed (3),
.BR shr_read_done (3),
.BR shr_write (3),
.BR shr_write_try (3),
.BR shr_write_timed (3),
.BR shr_write_done (3)
.SH AUTHORS
Principal author, Mattias Andr√©e.  See the LICENSE file for the full
list of authors.
.SH LICENSE
MIT/X Consortium License.
.SH BUGS
Please report bugs to https://github.com/maandree/shr/issues or to
maandree@member.fsf.org
