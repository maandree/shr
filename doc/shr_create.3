.TH SHR_CREATE 3 SHR-%VERSION%
.SH NAME
.B shr_create
\- Create a shared ring buffer.
.SH SYNOPSIS
.LP
.nf
#include <shr.h>
.P
__attribute__((nonnull))
int shr_create(shr_key_t *restrict \fIkey\fP, size_t \fIbuffer_size\fP, size_t \fIbuffer_count\fP, mode_t \fIpermissions\fP);
.fi
.P
Link with \fI\-lshr\fP.
.SH DESCRIPTION
The
.BR shr_create ()
function creates a shared ring buffer.
.P
The shared ring buffer will be \fIbuffer_count\fP-fold buffered,
and each buffer will be allocated with a size of \fIbuffer_size\fP bytes.
\fIbuffer_count\fP must not be zero; 3 is recommended.
.P
The shared ring buffer will be owned by the calling
process's effective user and effective group.
.P
The shared ring buffer will have access according to the following rules:
.TP
*
If (\fIpermissions\fP &S_IRWXU) the owner should be given full access
to the shared ring buffer. Otherwise the owner should have no access.
.TP
*
If (\fIpermissions\fP &S_IRWXG) the group should be given read and
write shared ring buffer. Otherwise the group should have no access.
.TP
*
If (\fIpermissions\fP &S_IRWXO) others (except the group) should be
given read and write access to the bus. Otherwise others should have
no access.
.P
Undefined behaviour will be invoked if (sizeof(size_t) + \fIbuffer_count\fP *
(\fIbuffer_size\fP + sizeof(size_t)) > SIZE_MAX), if (\fIbuffer_count\fP == 0)
or if ((\fIpermissions\fP &~(S_IRWXU | S_IRWXG | S_IRWXO))),
or if (\fIbuffer_count\fP > SHORT_MAX).
.SH RETURN VALUES
Upon successful completion, the function returns 0.
Otherwise the function returns \-1 and sets
\fIerrno\fP to indicate the error.
.SH ERRORS
This function may fail with any error specified the functions
.BR shmat (3),
.BR semctl (3)
and
.BR malloc (3),
as well as the errors
.BR EINVAL ,
.BR ENOMEM ,
and
.BR ENOSPC ,
as specified for the functions
.BR shmget (3)
and
.BR semget (3).
.SH SEE ALSO
.BR shr_remove (3),
.BR shr_remove_by_key (3),
.BR shr_open (3),
.BR shr_chown (3),
.BR shr_chmod (3),
.BR shr_stat (3),
.BR shr_key_to_str (3),
.BR shr_str_to_key (3)
.SH AUTHORS
Principal author, Mattias Andr√©e.  See the LICENSE file for the full
list of authors.
.SH LICENSE
MIT/X Consortium License.
.SH BUGS
Please report bugs to m@maandree.se
